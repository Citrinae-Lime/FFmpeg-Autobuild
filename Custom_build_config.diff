diff --git a/cross_compile_ffmpeg.sh b/cross_compile_ffmpeg.sh
index 8e243278..f082d1fd 100755
--- a/cross_compile_ffmpeg.sh
+++ b/cross_compile_ffmpeg.sh
@@ -2345,7 +2345,7 @@ build_ffmpeg() {
       local arch=x86_64
     fi
 
-    init_options="--pkg-config=pkg-config --pkg-config-flags=--static --extra-version=ffmpeg-windows-build-helpers --enable-version3 --disable-debug --disable-w32threads"
+    init_options="--pkg-config=pkg-config --pkg-config-flags=--static --enable-version3 --disable-debug --disable-w32threads"
     if [[ $compiler_flavors != "native" ]]; then
       init_options+=" --arch=$arch --target-os=mingw32 --cross-prefix=$cross_prefix"
     else
@@ -2358,7 +2358,7 @@ build_ffmpeg() {
       init_options+=" --disable-schannel"
       # Fix WinXP incompatibility by disabling Microsoft's Secure Channel, because Windows XP doesn't support TLS 1.1 and 1.2, but with GnuTLS or OpenSSL it does.  XP compat!
     fi
-    config_options="$init_options --enable-libcaca --enable-gray --enable-libtesseract --enable-fontconfig --enable-gmp --enable-libass --enable-libbluray --enable-libbs2b --enable-libflite --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libilbc --enable-libmodplug --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopus --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libtheora --enable-libtwolame --enable-libvo-amrwbenc --enable-libvorbis --enable-libwebp --enable-libzimg --enable-libzvbi --enable-libmysofa --enable-libopenjpeg  --enable-libopenh264  --enable-libvmaf --enable-libsrt --enable-libxml2 --enable-opengl --enable-libdav1d --enable-cuda-llvm  --enable-gnutls"
+    config_options="$init_options --enable-libcaca --enable-gray --enable-libtesseract --enable-fontconfig --enable-gmp --enable-libass --enable-libbluray --enable-libbs2b --enable-libfreetype --enable-libfribidi --enable-libgme --enable-libgsm --enable-libilbc --enable-libmp3lame --enable-libopus --disable-encoder=opus --enable-libsnappy --enable-libsoxr --enable-libspeex --enable-libtheora --enable-libvorbis --disable-encoder=vorbis --enable-libwebp --enable-libzimg --enable-libopenjpeg --enable-libopenh264 --enable-libsrt --enable-libxml2 --enable-opengl --enable-libdav1d --enable-cuda-llvm  --enable-openssl"
 
     if [[ $build_svt = y ]]; then
       if [ "$bits_target" != "32" ]; then
@@ -2380,15 +2380,16 @@ build_ffmpeg() {
         fi
         config_options+=" --enable-libsvthevc"
         config_options+=" --enable-libsvtav1"
-        # config_options+=" --enable-libsvtvp9" #not currently working but compiles if configured
-        config_options+=" --enable-libvpx"
+        config_options+=" --enable-libsvtvp9" #not currently working but compiles if configured
       fi # else doesn't work/matter with 32 bit
     fi
+    
+    config_options+=" --enable-libvpx"
     config_options+=" --enable-libaom"
 
-    if [[ $compiler_flavors != "native" ]]; then
-      config_options+=" --enable-nvenc --enable-nvdec" # don't work OS X
-    fi
+    # if [[ $compiler_flavors != "native" ]]; then
+    #   config_options+=" --enable-nvenc --enable-nvdec" # don't work OS X
+    # fi
 
     config_options+=" --extra-libs=-lharfbuzz" #  grr...needed for pre x264 build???
     config_options+=" --extra-libs=-lm" # libflite seemed to need this linux native...and have no .pc file huh?
@@ -2409,7 +2410,7 @@ build_ffmpeg() {
       config_options+=" --disable-libmfx"
     fi
     if [[ $enable_gpl == 'y' ]]; then
-      config_options+=" --enable-gpl --enable-frei0r --enable-librubberband --enable-libvidstab --enable-libx264 --enable-libx265 --enable-avisynth --enable-libaribb24"
+      config_options+=" --enable-gpl --enable-frei0r --enable-libx264 --enable-libx265"
       config_options+=" --enable-libxvid --enable-libdavs2"
       if [[ $host_target != 'i686-w64-mingw32' ]]; then
         config_options+=" --enable-libxavs2"
@@ -2435,9 +2436,9 @@ build_ffmpeg() {
     if [[ "$non_free" = "y" ]]; then
       config_options+=" --enable-nonfree --enable-libfdk-aac"
 
-      if [[ $compiler_flavors != "native" ]]; then
-        config_options+=" --enable-decklink" # Error finding rpc.h in native builds even if it's available
-      fi
+      # if [[ $compiler_flavors != "native" ]]; then
+      #   config_options+=" --enable-decklink" # Error finding rpc.h in native builds even if it's available
+      # fi
       # other possible options: --enable-openssl [unneeded since we already use gnutls]
     fi
 
@@ -2596,10 +2597,10 @@ build_ffmpeg_dependencies() {
   build_unistring
   build_libidn2 # needs iconv and unistring
   build_gnutls # Needs nettle >= 3.1, hogweed (nettle) >= 3.1. Uses libidn2, unistring, zlib, and dlfcn.
-  #if [[ "$non_free" = "y" ]]; then
-  #  build_openssl-1.0.2 # Nonfree alternative to GnuTLS. 'build_openssl-1.0.2 "dllonly"' to build shared libraries only.
-  #  build_openssl-1.1.1 # Nonfree alternative to GnuTLS. Can't be used with LibRTMP. 'build_openssl-1.1.1 "dllonly"' to build shared libraries only.
-  #fi
+  if [[ "$non_free" = "y" ]]; then
+   build_openssl-1.0.2 # Nonfree alternative to GnuTLS. 'build_openssl-1.0.2 "dllonly"' to build shared libraries only.
+   build_openssl-1.1.1 # Nonfree alternative to GnuTLS. Can't be used with LibRTMP. 'build_openssl-1.1.1 "dllonly"' to build shared libraries only.
+  fi
   build_libogg # Uses dlfcn.
   build_libvorbis # Needs libogg >= 1.0. Uses dlfcn.
   build_libopus # Uses dlfcn.
@@ -2725,24 +2726,24 @@ build_dependencies=y
 git_get_latest=y
 prefer_stable=y # Only for x264 and x265.
 build_intel_qsv=y # note: not windows xp friendly!
-build_amd_amf=y
-disable_nonfree=y # comment out to force user y/n selection
+build_amd_amf=n
+disable_nonfree=n # comment out to force user y/n selection
 original_cflags='-mtune=generic -O3' # high compatible by default, see #219, some other good options are listed below, or you could use -march=native to target your local box:
 original_cppflags='-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=0' # Needed for mingw-w64 7 as FORTIFY_SOURCE is now partially implemented, but not actually working
 # if you specify a march it needs to first so x264's configure will use it :| [ is that still the case ?]
 
-#flags=$(cat /proc/cpuinfo | grep flags)
-#if [[ $flags =~ "ssse3" ]]; then # See https://gcc.gnu.org/onlinedocs/gcc/x86-Options.html, https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html and https://stackoverflow.com/questions/19689014/gcc-difference-between-o3-and-os.
-#  original_cflags='-march=core2 -O2'
-#elif [[ $flags =~ "sse3" ]]; then
-#  original_cflags='-march=prescott -O2'
-#elif [[ $flags =~ "sse2" ]]; then
-#  original_cflags='-march=pentium4 -O2'
-#elif [[ $flags =~ "sse" ]]; then
-#  original_cflags='-march=pentium3 -O2 -mfpmath=sse -msse'
-#else
-#  original_cflags='-mtune=generic -O2'
-#fi
+flags=$(cat /proc/cpuinfo | grep flags)
+if [[ $flags =~ "ssse3" ]]; then # See https://gcc.gnu.org/onlinedocs/gcc/x86-Options.html, https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html and https://stackoverflow.com/questions/19689014/gcc-difference-between-o3-and-os.
+ original_cflags='-march=core2 -O2'
+elif [[ $flags =~ "sse3" ]]; then
+ original_cflags='-march=prescott -O2'
+elif [[ $flags =~ "sse2" ]]; then
+ original_cflags='-march=pentium4 -O2'
+elif [[ $flags =~ "sse" ]]; then
+ original_cflags='-march=pentium3 -O2 -mfpmath=sse -msse'
+else
+ original_cflags='-mtune=generic -O2'
+fi
 ffmpeg_git_checkout_version=
 build_ismindex=n
 enable_gpl=y
@@ -2763,7 +2764,7 @@ while true; do
       --x265-git-checkout-version=[master] if you want to build a particular version of x265, ex: --x265-git-checkout-version=Release_3.2 or a specific git hash
       --fdk-aac-git-checkout-version= if you want to build a particular version of fdk-aac, ex: --fdk-aac-git-checkout-version=v2.0.1 or another tag
       --gcc-cpu-count=[number of cpu cores set it higher than 1 if you have multiple cores and > 1GB RAM, this speeds up initial cross compiler build. FFmpeg build uses number of cores no matter what]
-      --disable-nonfree=y (set to n to include nonfree like libfdk-aac,decklink)
+      --disable-nonfree=n (set to n to include nonfree like libfdk-aac,decklink)
       --build-intel-qsv=y (set to y to include the [non windows xp compat.] qsv library and ffmpeg module. NB this not not hevc_qsv...
       --sandbox-ok=n [skip sandbox prompt if y]
       -d [meaning \"defaults\" skip all prompts, just build ffmpeg static with some reasonable defaults like no git updates]